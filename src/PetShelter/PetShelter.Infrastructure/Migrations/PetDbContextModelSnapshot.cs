// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShelter.Infrastructure;

#nullable disable

namespace PetShelter.Infrastructure.Migrations
{
    [DbContext(typeof(PetDbContext))]
    partial class PetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetShelter.Domain.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pets", (string)null);
                });

            modelBuilder.Entity("PetShelter.Domain.Entities.Pet", b =>
                {
                    b.OwnsOne("PetShelter.Domain.ValueObjects.BusinessState", "BusinessState", b1 =>
                        {
                            b1.Property<Guid>("PetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("AdoptedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("AdoptedDate");

                            b1.Property<bool>("IsAvailableForAdoption")
                                .HasColumnType("bit")
                                .HasColumnName("IsAvailableForAdoption");

                            b1.Property<DateTime>("RescuedDate")
                                .HasColumnType("datetime2")
                                .HasColumnName("RescuedDate");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)")
                                .HasColumnName("Status");

                            b1.HasKey("PetId");

                            b1.ToTable("Pets");

                            b1.WithOwner()
                                .HasForeignKey("PetId");
                        });

                    b.OwnsOne("PetShelter.Domain.ValueObjects.PhysicalCharacteristics", "PhysicalCharacteristics", b1 =>
                        {
                            b1.Property<Guid>("PetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Height")
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("Height");

                            b1.Property<bool>("IsNeutered")
                                .HasColumnType("bit")
                                .HasColumnName("IsNeutered");

                            b1.Property<bool>("IsVaccinated")
                                .HasColumnType("bit")
                                .HasColumnName("IsVaccinated");

                            b1.Property<decimal>("Weight")
                                .HasColumnType("decimal(5,2)")
                                .HasColumnName("Weight");

                            b1.HasKey("PetId");

                            b1.ToTable("Pets");

                            b1.WithOwner()
                                .HasForeignKey("PetId");
                        });

                    b.Navigation("BusinessState")
                        .IsRequired();

                    b.Navigation("PhysicalCharacteristics")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
